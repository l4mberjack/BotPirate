import telebot
import hashlib
from secrets import secrets
from telebot import types # –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
from stegano import lsb

token = secrets.get('BOT_API_TOKEN')
bot = telebot.TeleBot(token)

# –•–µ–Ω–¥–ª–µ—Ä –∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("üöÄ –°—Ç–∞—Ä—Ç")
    faq_button = types.KeyboardButton("‚ùì FAQ")
    markup.add(start_button, faq_button)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name} üëã\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏\nüöÄ –°—Ç–∞—Ä—Ç - –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n‚ùì FAQ - —Å–ø—Ä–∞–≤–∫–∞ –æ –±–æ—Ç–µ".format(message.from_user), reply_markup=markup)


#–ú–µ–Ω—é—à–∫–∞ c –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
def menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("üöÄ –°—Ç–∞—Ä—Ç")
    faq_button = types.KeyboardButton("‚ùì FAQ")
    keyboard.add(start_button, faq_button)
    bot.send_message(message.chat.id, text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\nüöÄ –°—Ç–∞—Ä—Ç - –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n‚ùì FAQ - —Å–ø—Ä–∞–≤–∫–∞ –æ –±–æ—Ç–µ",reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ /start
@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == "üöÄ –°—Ç–∞—Ä—Ç":
         bot.send_message(message.chat.id, "–î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —á—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å!üë®‚Äçüíª",reply_markup=types.ReplyKeyboardRemove())
         main(message)
    elif message.text == "‚ùì FAQ":
         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
         faq_button = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
         markup.add(faq_button)
         bot.send_message(message.chat.id,
                          "–°–ø—Ä–∞–≤–∫–∞ –æ –±–æ—Ç–µ:\n–ü—Ä–∏–≤–µ—Ç!üëã\n"
                          "–Ø PirateHat_botüè¥‚Äç‚ò†Ô∏è- –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ —Å—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏–µ–π. –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ —Å–≤–æ—é –ø–æ–º–æ—â—å:\n\n"
                          "üîê<b>–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ:</b>\n\n"
                          "‚Ä¢ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ö–µ—à–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞, –∞—É–¥–∏–æ, –¥–æ–∫—É–º–µ–Ω—Ç–∞, —Å—Ç–∏–∫–µ—Ä–∞, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è "
                          "(–≤—ã–±–µ—Ä–∏ –∞–ª–≥–æ—Ä–∏—Ç–º: MD5, SHA-1, SHA-256, SHA-224, SHA-384, SHA-512, blake2b, blake2s ‚Äì <i>–ø–æ–¥—Å–∫–∞–∑–∫–∞*</i> –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞). "
                          "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ - –ø–æ–ª—É—á–∏ –≥–æ—Ç–æ–≤—ã–π —Ö–µ—à!\n\n"
                          "‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ —Ö–µ—à–∞ ‚Äì –ø—Ä–æ–≤–µ—Ä—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö. –ó–∞–≥—Ä—É–∑–∏ –¥–≤–∞ —Ö–µ—à–∞, —è –ø—Ä–æ–≤–µ—Ä—é!\n\n"
                          "<i>*–ù–∞–ø–∏—à–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –∞–ª–≥–æ—Ä–∏—Ç–º—É.</i>\n\n"
                          "üèûÔ∏è<b>–°—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—è:</b>\n\n"
                          "‚Ä¢ –°–ø—Ä—è—Ç–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µü§´ –≤ –∫–∞—Ä—Ç–∏–Ω–∫–µ –∏–ª–∏ –∞—É–¥–∏–æ –∑–∞–ø–∏—Å–∏. –ó–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª, –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç ‚Äì –≥–æ—Ç–æ–≤–æ!\n\n"
                          "‚Ä¢ –ò–∑–≤–ª–µ—á—å —Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç –∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞. –û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª, —è –∏–∑–≤–ª–µ–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n\n\n"
                          "‚ùóÔ∏èPirateHat_bot –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ - –±–æ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. ‚ùóÔ∏è"
                          ,reply_markup=markup, parse_mode="HTML")

    elif message.text == "üîô –ù–∞–∑–∞–¥":
        menu(message)



def what_do(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    hash_button = types.KeyboardButton("–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ")
    steg_button = types.KeyboardButton("–°—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—è")
    keyboard.add(hash_button, steg_button)
    bot.send_message(message.chat.id,"–π–æ—É", reply_markup=keyboard)
    if message.text == "–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ":
        bot.send_message(message.chat.id, "–π–æ—É?")
        main(message)
    elif message.text == "–°—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏—è":
        bot.send_message(message.chat.id, "—Ö–∑ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª")



def main(message):
    markup = types.InlineKeyboardMarkup()
    btnText = types.InlineKeyboardButton("MD5",callback_data='MD5')
    btnAudio = types.InlineKeyboardButton("SHA-1",callback_data='SHA1')
    markup.row(btnText, btnAudio)
    btnDocs = types.InlineKeyboardButton("SHA-256",callback_data='Docs')
    markup.row(btnDocs)
    btnStick = types.InlineKeyboardButton("SHA-224",callback_data='Sticker')
    btnVid = types.InlineKeyboardButton("SHA-384",callback_data='Video')
    markup.row(btnStick, btnVid)
    btnVoice = types.InlineKeyboardButton("SHA-512",callback_data='Voice')
    markup.row(btnVoice)
    btnBack = types.InlineKeyboardButton("üîô–ù–∞–∑–∞–¥üîô", callback_data='Back')
    markup.row(btnBack)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –º–µ—Ç–æ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=markup, parse_mode="Markdown")


def hashing(message):
    if message.content_type == 'text':
        user_message = message.text
        hasher = hashlib.md5()
        hasher.update(user_message.encode('utf-8'))  # –ö–æ–¥–∏—Ä—É–µ–º –≤ UTF-8 –ø–µ—Ä–µ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        hex_hash = hasher.hexdigest()
        bot.reply_to(message, f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏: {user_message}\n–ï–≥–æ MD5 —Ö–µ—à: {hex_hash}")
    elif message.content_type == 'sticker':
        file_info = bot.get_file(message.sticker.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        hasher = hashlib.sha1()
        hasher.update(downloaded_file)
        hex_hash = hasher.hexdigest()
        bot.reply_to(message, f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ç–∏–∫–µ—Ä.\n–ï–≥–æ SHA-1 —Ö–µ—à: {hex_hash}")


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'MD5':
        chose_Data(callback.message)
    elif callback.data == 'SHA1':
        chose_Data(callback.message)
    elif callback.data == 'Back':
        menu(callback.message)

@bot.message_handler(content_types=["text", "audio", "document", "sticker", "video", "voice"])
def chose_Data(message):
    bot.send_message(message.chat.id, "–°–∫–∏–Ω—å –º–Ω–µ –¥–∞–Ω–Ω—ã–µ, –∞ —è –∏—Ö –∑–∞—Ö–µ—à–∏—Ä—É—é üòé")
    bot.register_next_step_handler(message, hashing)



# –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
bot.polling()